From ce1edd79074c7e0f466bcd38fce5d7c37c279ee8 Mon Sep 17 00:00:00 2001
From: Xinyang Ge <xinyang.ge@databricks.com>
Date: Sat, 5 Nov 2022 02:57:48 +0000
Subject: [PATCH] hardcode sysctl settings according to classic

---
 include/linux/mm.h   | 2 +-
 kernel/events/core.c | 2 +-
 mm/vmscan.c          | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/include/linux/mm.h b/include/linux/mm.h
index 73a52aba448f..c494278ca62d 100644
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -199,7 +199,7 @@ static inline void __mm_zero_struct_page(struct page *page)
  * that.
  */
 #define MAPCOUNT_ELF_CORE_MARGIN	(5)
-#define DEFAULT_MAX_MAP_COUNT	(USHRT_MAX - MAPCOUNT_ELF_CORE_MARGIN)
+#define DEFAULT_MAX_MAP_COUNT	8388608
 
 extern int sysctl_max_map_count;
 
diff --git a/kernel/events/core.c b/kernel/events/core.c
index f23ca260307f..cf6834cc0650 100644
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@ -415,7 +415,7 @@ static struct kmem_cache *perf_event_cache;
  *   1 - disallow cpu events for unpriv
  *   2 - disallow kernel profiling for unpriv
  */
-int sysctl_perf_event_paranoid __read_mostly = 2;
+int sysctl_perf_event_paranoid __read_mostly = 1;
 
 /* Minimum for 512 kiB + 1 user control page */
 int sysctl_perf_event_mlock __read_mostly = 512 + (PAGE_SIZE / 1024); /* 'free' kiB per user */
diff --git a/mm/vmscan.c b/mm/vmscan.c
index 74296c2d1fed..741c14c8c071 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -174,7 +174,7 @@ struct scan_control {
 /*
  * From 0 .. 200.  Higher means more swappy.
  */
-int vm_swappiness = 60;
+int vm_swappiness = 1;
 
 static void set_task_reclaim_state(struct task_struct *task,
 				   struct reclaim_state *rs)
-- 
2.17.1

